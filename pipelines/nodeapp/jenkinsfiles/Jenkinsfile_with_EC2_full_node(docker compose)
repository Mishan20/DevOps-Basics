pipeline {
    agent any

    environment {
        ImageRegistry = 'mishan202' // Docker Hub username
        EC2_IP = '54.171.233.251'  // Replace with your EC2 instance's public IP
        DockerComposeFile = 'docker-compose.yml'
        DotEnvFile = '.env'
    }

    stages {
        stage('Login to Docker Hub') {
            steps {
                withCredentials([string(credentialsId: 'docker-password', variable: 'dockerPassword')]) {
                    script {
                        sh """
                        docker login -u mishan202 -p %dockerPassword%
                        """
                    }
                }
            }
        }

        stage("Build Docker Image") {
            steps {
                script {
                    echo "Building Docker Image..."
                    sh """
                    docker build -t ${ImageRegistry}/${JOB_NAME}:${BUILD_NUMBER} .
                    """
                }
            }
        }

        stage("Push Docker Image to DockerHub") {
            steps {
                script {
                    echo "Pushing Image to Docker Hub..."
                    sh """
                    docker push ${ImageRegistry}/${JOB_NAME}:${BUILD_NUMBER}
                    """
                }
            }
        }

        stage("Deploy to AWS EC2") {
            steps {
                script {
                    echo "Deploying application on EC2..."
                    sshagent(['ec2']) {
                        sh """
                        pscp -i ec2-key.pem ${DockerComposeFile} ${DotEnvFile} ubuntu@${EC2_IP}:/home/ubuntu
                        plink -i ec2-key.pem ubuntu@${EC2_IP} "docker compose -f /home/ubuntu/${DockerComposeFile} --env-file /home/ubuntu/${DotEnvFile} down || true"
                        plink -i ec2-key.pem ubuntu@${EC2_IP} "docker compose -f /home/ubuntu/${DockerComposeFile} --env-file /home/ubuntu/${DotEnvFile} up -d"
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up workspace..."
            cleanWs()
        }
    }
}
